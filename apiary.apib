FORMAT: 1A
HOST: https://repository.agilesigner.com:8443/Agile27/admin

# CertificateRepositoryAPI

API para banco de Firmas y generación de Certificados.

## Authentication
    La autenticación en esta API es del tipo Basic Authentication, por lo que la aplicación que consuma la API debe proporcionar su applicationID y su password.

+ Authentication Schemes
    + basic (Generic Base)
        + Headers
            + Authentication: Basic abcd1234
            


## Solicitud de Certificado [/certificates]
Permite generar un certificado digital para una persona, retornando posteriormente un Base64 del X509

### Generar Solicitud de Certificado [POST]

+ Attributes (object)
    + Include User
    + Include CAinfo
    + certificateType (string, required) - Certificate type
    + expirationYears (string, required) - Certificate's expiration in ISO 8601 format
    + purpose (string) - Certificate's purpose


+ Request (application/json; charset=UTF-8)

            {
                "commonName": "JOHN DOE",
                "dni": "11111111-1",
                "cargo": "NADA",
                "organismo": "NADA",
                "entidad" : "NADA",
                "email": "example@agile.cl",
                "name": "TESTX",
                "entityProfile": "test",
                "certificateProfile": "SAI",
                "certificateType": "OTP",
                "expirationYears": "2016-01-15 13:13:13+00:00",    
                "purpose": "Samples"
            }
    

+ Response 201 (application/json; charset=UTF-8)
    + Attributes (Certificate)
    

 + Body
 
            {
                "x509":"-----BEGIN CERTIFICATE-----\nMIIEyDCCA7CgAwIBAgIIHuVNu07jYP4wDQYJKoZIhvcNAQEFBQAwEDEOMAwGA1UEAwwFVEVTVFgwHhcNMTYwMTI3MTkwNjI2WhcNMTgwMTI2MTkwNjI2WjCB1jEnMCUGCSqGSIb3DQEJARYYY2xhdWRpby5kZWxnYWRvQGFnaWxlLmNsMRgwFgYDVQQDEw9DTEFVRElPIERFTEdBRE8xFjAUBgNVBAwTDUNhcmdvIENsYXVkaW8xMTAvBgNVBAsMKFN1YnNlY3JldGFyw61hIEdlbmVyYWwgZGUgTGEgUHJlc2lkZW5jaWExOTA3BgNVBAoMME1pbmlzdGVyaW8gU2VjcmV0YXLDrWEgR2VuZXJhbCBkZSBsYSBQcmVzaWRlbmNpYTELMAkGA1UEBhMCQ0wwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCULD7bdJ1sTkD3rv8F5OUGyninAkK2mLARC5T/G2oERMTjgjIWPSeIdcdQL1Gl5Vigc11wnRiiew7B4mOKQzRYgoFmO+0tUKMHNk1D0z3fEA5oycBOP4BJROOQqKEQRBcSV3hcIl6XvFSQl2pf6KQ6eqOPOWmTetjHVy9MMSk1TdtjfZs51+PbIBljipYrPUKmpumIZsYOX8P/D9bf1+qS0OQ4zw0LgfUb9wQCRlqRyc7TcIixCxjM0/sojcEXQU+gzzDeBNpJxY9rWfZr/wGR3/MQQHNJCN3hT6qtULiFj/KnNCkYPtBmuiG91RpsqCMoq/cIYjNpdx+F/Uw8VXAHAgMBAAGjggFdMIIBWTA8BggrBgEFBQcBAQQwMC4wLAYIKwYBBQUHMAGGIGh0dHA6Ly8xOTIuMTY4LjEuMTM2L3N0YXR1cy9vY3NwMB0GA1UdDgQWBBQGN9a3fI7AGq3+xnbZfVjs/5sDUDAMBgNVHRMBAf8EAjAAMB8GA1UdIwQYMBaAFH8zOTHyh7V5CW2VuKV0rPO1NmMMMHcGA1UdHwRwMG4wbKBUoFKGUGh0dHA6Ly8xOTIuMTY4LjEuMTM2OjgwL2VqYmNhL3B1YmxpY3dlYi93ZWJkaXN0L2NlcnRkaXN0P2NtZD1jcmwmaXNzdWVyPUNOPVRFU1RYohSkEjAQMQ4wDAYDVQQDDAVURVNUWDAOBgNVHQ8BAf8EBAMCBeAwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMEMCMGA1UdEQQcMBqgGAYIKwYBBAHBAQGgDAwKMTMzMDE0MzAtNjANBgkqhkiG9w0BAQUFAAOCAQEAHZT807838zf/9tonpFqv4MdJftC0eWBYfe9kD/4ZXzSWtwbImc2Ng8+CgQW5T2gBo6MEkQEMa5kF69Ay8XS6S8xWl63QEZAt3c3GB/zPVi+XpaJJBHuuSpl9Q+r+PcHTzMwx8BbtEzras5VTuOw9KwfAJsArX88s8QJq9lNLVnN12CjNarjr1r5MnM35em4jjX9WVrcdkQ3G5yN7yzyhm29lFomoz1d3Qpmb+ftNqh7oJH85JUREHx30kMhi6ThWoCIHqETZBjdv1TSN6K0wX0k7QFR6hFLqZOb1qNVj80hVCMhKZcb1zcL6ILVoH+IQdm045z99LN1uw/ucuxK0RQ==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIDLDCCAhSgAwIBAgIIPIVLC04q/TkwDQYJKoZIhvcNAQEFBQAwEDEOMAwGA1UEAwwFVEVTVFgwHhcNMTUxMjIzMTM0NDAzWhcNMjUxMjIzMTM0NDAzWjAQMQ4wDAYDVQQDDAVURVNUWDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKoY0KMqacGBKB8nxz8izmfPhIGSHlcHT4Ki6qeVxcbe1sRsNigC16s4whmeQO4CRBZngHW0d1k4jyeU6O2nZOO074K2yk1NcVxRw9NblkOlbymE8wN+f37nzNWaBoRY++pRkkDZWzW6kcJgUJEJhaQfotRzDeeHP8qhroND4bYPJdesY8fDxVZCeEygHCztOVxYBZdnGN6RMIfFWAIZ9XluRKvmrtnSFv0eej4t3P5m/V+xQlR7bIIpbVkacMQs9vZeBhAT1JdDzlVIskA9Sldn3O1nycQiO4kiJa/9SxPoMhO/Tx06MxrZ+rj3UG5oCJ2zTzn6IiKtqEggo2EKIX8CAwEAAaOBiTCBhjAdBgNVHQ4EFgQUfzM5MfKHtXkJbZW4pXSs87U2YwwwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBR/Mzkx8oe1eQltlbildKzztTZjDDAOBgNVHQ8BAf8EBAMCAYYwIwYDVR0RBBwwGqAYBggrBgEEAcEBAqAMDApSVVQgSVNTVUVSMA0GCSqGSIb3DQEBBQUAA4IBAQAoxmHuFGScN/pQ7K3Wdpw2Klcx97sSHXxDpT4mPaJeP2OmeI8+tZqGjYkD1MDUBFKAIomAqmn7JZQmW3faGtSPo/0p4eEEUN3sQ1h3bauJAWqyxhlFIfTUxYYrNr+RJLp5Huq4CVTzV1ERSqwbVbAhXr1jMJFE2hkrscIIcHUQYXTYc+vbLsg0M6VqICegVFiTn4n372hvTTeBl9VyGxwx3xdLZIj/JcJWTNKDy25JE455ZWPIP0N5hoiGeFUltc1BhMcHuMkwowhyNMs2m3/ZdFiusyn0ZX6a2Rvmhx9GyIC2o/3irlDJZCSyCqovy7qfHyxrfxBMajIBKJ7sjhFZ\n-----END CERTIFICATE-----"
            }
    

## Habilitación de Certificados [/certificates/{fp}/confirm]
Los certificados una vez validados por el ministro de fé, deben ser confirmados ante el banco de certificados para habilitar el uso de los mismos

+ Parameters
    + fp:1 (number,required) - Identificador único del certificado
    
### Habilitar Certificado [PUT]

+ Attributes (object)
    + hash (string, optional) - XML confirmation Hash is optional in attestor certificate

+ Request (application/json; charset=UTF-8)

+ Response 200

        El certificado ha sido correctamente confirmado y está disponible para usarse

+ Response 404

        El certificado no existe o no corresponde al usuario



## Solicitud de OTP [/certificates/{fp}/otp]
Para poder firmar con sus certificados (de tipo OTP) los ususarios deben obtener su secreto de "one time password" para 

+ Parameters
    + fp:1 (number,required) - Identificador único del certificado

### Solicitar OTP [GET]    

+ Response 200 (application/json; charset=UTF-8)
    + Attributes (object)
        + secret (string) - Certificate's OTP secret
        

 + Body

            {
                "secret": "OTPSecret"
            }

+ Response 409

        El certificado no es de tipo OTP

+ Response 500

        Error interno del Servidor
        
## Revocación de Certificado [/certificates/{fp}{?reason}]
Revoca un certificado, eliminando sus claves privadas y lo deja sin uso en el sistema.

+ Parameters
    + fp:1a6378b3c8fa1e (string, required) - Certificate's finger print
    + reason:1 (number,optional) - Revocation reason code

### Revocar Certificado [DELETE]

+ Response 204

        El certificado se ha revocado correctamente

+ Response 404

        El certificado no existe o no corresponde al usuario
        
+ Response 500

        Error interno del Servidor
        

## Nueva Aplicación [/applications]
Permite añadir una aplicación que interactuará con el Banco de firma

### Añadir Aplicación [POST]

+ Attributes (object)
    + pem (string, required) - Public Key Pem
    + name (string, required) - Name of Application
    
+ Request (application/json; charset=UTF-8)

            {
                "pem": "JOHN DOE",
                "name": "TEST"
            }
    

+ Response 201 (application/json; charset=UTF-8)
    + Attributes (object)
        + tokenKey (string) - Application's token Key
  
 + Body

            {
                "tokenKey": "keytest"
            }
            

## Nueva Aplicación [/applications/{key}]
Permite remover una aplicación y eliminará su interacción con el Banco de firma

+ Parameters
    + key:keytest (string, required) - Application's token key

### Remover Aplicación [DELETE]

+ Response 204

        La aplicación se ha removido correctamente

+ Response 404

        La aplicación no existe
        
## Ligar Certificado [/applications/{key}/certificates/{fp}]
Permite ligar una aplicación con un certificado, la cual podrá realizar procesos de firma con el mismo.

+ Parameters
    + key:keytest (string, required) - Application's token key
    + fp:1a6378b3c8fa1e (string, required) - Certificate's finger print

### Ligar Certificado [POST]

+ Response 200

        La aplicación está habilitada para firmar con el certificado asociado

+ Response 404

        La aplicación o el certificado no existe
    
        
# Data Structures

## Certificate (object)
+ x509 (string) - Certificate's pem in Base64 format

## User (object)
+ commonName (string, required) - User's common name 
+ dni (string, required) - User's unique identifier (xxx-x)
+ cargo (string) - User's position
+ organismo (string) - User's organism
+ entidad (string) - User's organism unit
+ email (string, required) - User's email address    

## CAinfo (object)
+ name (string, required) - CA name
+ entityProfile (string, required) - Entity Profile
+ certificateProfile (string, required) - Certificate Profile